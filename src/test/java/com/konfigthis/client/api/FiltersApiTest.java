/*
 * Vantage
 * Vantage API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@vantage.sh
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PostSavedFilters;
import com.konfigthis.client.model.PutSavedFilters;
import com.konfigthis.client.model.SavedFilter;
import com.konfigthis.client.model.SavedFilters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FiltersApi
 */
@Disabled
public class FiltersApiTest {

    private static FiltersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FiltersApi(apiClient);
    }

    /**
     * Create a SavedFilter for CostReports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSavedFilterForCostReportsTest() throws ApiException {
        String title = null;
        String workspaceToken = null;
        String filter = null;
        SavedFilter response = api.createSavedFilterForCostReports(title)
                .workspaceToken(workspaceToken)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a SavedFilter for CostReports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSavedFilterTest() throws ApiException {
        String savedFilterToken = null;
        SavedFilter response = api.deleteSavedFilter(savedFilterToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Return all SavedFilters that can be applied to a CostReport.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCostReportFiltersTest() throws ApiException {
        Integer page = null;
        Integer limit = null;
        SavedFilters response = api.getCostReportFilters()
                .page(page)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Return a specific SavedFilter.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSavedFilterTest() throws ApiException {
        String savedFilterToken = null;
        SavedFilter response = api.getSavedFilter(savedFilterToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a SavedFilter for CostReports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSavedFilterForCostReportsTest() throws ApiException {
        String savedFilterToken = null;
        String title = null;
        String filter = null;
        SavedFilter response = api.updateSavedFilterForCostReports(savedFilterToken)
                .title(title)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

}
