/*
 * Vantage
 * Vantage API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@vantage.sh
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BusinessMetric;
import com.konfigthis.client.model.BusinessMetrics;
import com.konfigthis.client.model.BusinessMetricsUpdateValuesCsvRequest;
import java.io.File;
import com.konfigthis.client.model.PostBusinessMetrics;
import com.konfigthis.client.model.PostBusinessMetricsCostReportTokensWithMetadataInner;
import com.konfigthis.client.model.PostBusinessMetricsValuesInner;
import com.konfigthis.client.model.PutBusinessMetrics;
import com.konfigthis.client.model.PutBusinessMetricsCostReportTokensWithMetadataInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BusinessMetricsApi
 */
@Disabled
public class BusinessMetricsApiTest {

    private static BusinessMetricsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BusinessMetricsApi(apiClient);
    }

    /**
     * Create a new Business Metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewMetricTest() throws ApiException {
        String title = null;
        List<PostBusinessMetricsCostReportTokensWithMetadataInner> costReportTokensWithMetadata = null;
        List<PostBusinessMetricsValuesInner> values = null;
        BusinessMetric response = api.createNewMetric(title)
                .costReportTokensWithMetadata(costReportTokensWithMetadata)
                .values(values)
                .execute();
        // TODO: test validations
    }

    /**
     * Deletes an existing BusinessMetric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExistingMetricTest() throws ApiException {
        String businessMetricToken = null;
        BusinessMetric response = api.deleteExistingMetric(businessMetricToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Return all Business Metrics that the current API token has access to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllMetricsTest() throws ApiException {
        Integer page = null;
        Integer limit = null;
        BusinessMetrics response = api.getAllMetrics()
                .page(page)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Return a specific Business Metric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetricByIdTest() throws ApiException {
        String businessMetricToken = null;
        BusinessMetric response = api.getMetricById(businessMetricToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Updates an existing BusinessMetric.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExistingMetricTest() throws ApiException {
        String businessMetricToken = null;
        String title = null;
        List<PutBusinessMetricsCostReportTokensWithMetadataInner> costReportTokensWithMetadata = null;
        List<PostBusinessMetricsValuesInner> values = null;
        BusinessMetric response = api.updateExistingMetric(businessMetricToken)
                .title(title)
                .costReportTokensWithMetadata(costReportTokensWithMetadata)
                .values(values)
                .execute();
        // TODO: test validations
    }

    /**
     * Updates the values for an existing BusinessMetric from a CSV file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateValuesCsvTest() throws ApiException {
        String businessMetricToken = null;
        File csv = null;
        BusinessMetric response = api.updateValuesCsv(businessMetricToken, csv)
                .execute();
        // TODO: test validations
    }

}
